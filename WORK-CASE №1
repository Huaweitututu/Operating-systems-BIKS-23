1. Git — це система контролю версій, яка дозволяє відслідковувати зміни у файлах, координувати роботу над проєктами між кількома розробниками та зберігати історію змін. 
Git використовується як для особистих проєктів, так і для командної роботи.
Основні дії та команди в Git:
Ініціалізація репозиторію
git init — створює новий локальний репозиторій у поточній директорії.
Клонування репозиторію
git clone <url> — копіює існуючий репозиторій з сервера (наприклад, GitHub або GitLab) на ваш комп'ютер.
Додавання файлів до індексу (стейджинг)
git add <файл> — додає файл до індексу для подальшого комміту.
git add . — додає всі змінені файли.
Створення коміту
git commit -m "Опис змін" — зберігає знімок поточних змін з описом.
Перегляд статусу репозиторію
git status — показує стан файлів у робочій директорії та індексі.
Перегляд історії комітів
git log — виводить журнал змін (історію комітів).
Відправка змін на віддалений репозиторій
git push origin main — відправляє зміни на головну (main) гілку віддаленого репозиторію.
Отримання змін з віддаленого репозиторію
git pull — завантажує та інтегрує зміни з віддаленого репозиторію у вашу локальну копію.
2. Комміт (Commit) — це збереження змін у репозиторії Git з певним коментарем, який описує, що було змінено.
Кожен комміт має унікальний ідентифікатор (хеш/hash), що дозволяє відслідковувати та відновлювати попередні версії файлів.
Комміт є невід'ємною частиною роботи з Git, що дозволяє ефективно керувати змінами у проєкті, зберігаючи його історію та забезпечуючи можливість відстежувати й контролювати всі внесені зміни.
Дозволяє відстежувати зміни в коді, зберігати історію правок і повертатися до попередніх версій. Кілька розробників можуть одночасно працювати над проєктом, вносити зміни та об'єднувати їх. Дає змогу створювати власні копії репозиторію, редагувати їх і пропонувати зміни для основного проєкту. Можна керувати рівнем доступу для членів команди.