Тема: “Знайомство з інтерфейсом та можливостями ОС Linux”

Мета роботи: 
Знайомство з інтерфейсами ОС Linux.
Отримання практичних навиків роботи в середовищах ОС Linux та мобільної ОС – їх графічною оболонкою, входом і виходом з системи, ознайомлення зі структурою робочого столу, вивчення основних дій та налаштувань при роботі в системі

2.
CLI - The command line interface 
GUI - Graphical user interface
CPU - Central processing unit
VirtualBox - is a general-purpose full virtualization software

3. 
CLI-режим - A mode of interaction with a computer operating system or software where the user issues text-based commands to perform tasks. 
The CLI requires precise command syntax and is often favored for its efficiency, scriptability, and low resource usage. 
It contrasts with graphical user interfaces (GUIs) and is commonly accessed via terminals, consoles, or terminal emulators.

Термінал на основі графічного інтерфейсу користувача - A terminal application that runs within a graphical desktop environment (e.g., GNOME Terminal, macOS Terminal, or Windows Terminal). 
It emulates the functionality of a traditional text-based terminal but operates within a GUI framework, offering features like tabs, customizable fonts, color schemes, and integration with graphical tools. 
Users can still interact with CLI shells (e.g., Bash, PowerShell) through such terminals.

Віртуальний термінал - A software-emulated terminal that provides multiple independent text-based sessions on a single physical machine. 
Virtual terminals (e.g., tty1-tty6 in Linux) allow users to switch between different console sessions (e.g., via Ctrl+Alt+F1–F6 in Linux). 
They operate at the operating system level, enabling multitasking and multi-user access without requiring a GUI. Also called "virtual consoles" in some contexts.

Контрольні запитання

1.Linux Server Applications Examples 

1)Database Servers
PostgreSQL: Advanced open-source relational database (ACID-compliant, JSON support).  
MySQL/MariaDB: Popular relational databases for web apps (e.g., WordPress, e-commerce).  
MongoDB: NoSQL database for unstructured data (scalable, JSON-like documents).  
Redis: In-memory key-value store for caching, real-time apps, and messaging.  

2)Messaging Servers
RabbitMQ: Message broker for queuing and routing (supports AMQP, MQTT).  
Apache Kafka: Distributed streaming platform for real-time data pipelines.  
Ejabberd: XMPP/Jabber server for instant messaging and chat.  
Matrix Synapse: Decentralized communication (end-to-end encrypted chat, VoIP).  
Mosquitto: Lightweight MQTT broker for IoT messaging.  

3)File Sharing Servers
Samba: Share files with Windows clients (SMB/CIFS protocol).  
NFS (Network File System): Unix/Linux file sharing (high-speed, low overhead).  
vsftpd: Secure FTP server for file transfers.  
Nextcloud: Self-hosted cloud storage (files, calendars, collaboration).  
OpenSSH/SFTP: Securely transfer files over SSH.  

Use Cases:  
Database: Web apps, analytics, IoT data storage.  
Messaging: Microservices, IoT, team collaboration.  
File Sharing: Cross-platform sync, backups, enterprise data access.

2.Choosing the right shell depends on your specific needs and the environment in which you work. bash and zsh are popular choices for interactive use and scripting due to their extensive features and user-friendly capabilities.
dash is preferred for performance-sensitive scripts, while ksh and tcsh offer unique features that might be required in specific scenarios.
Understanding the differences between these shells can help you leverage the right tool for your tasks.

3.Package manager is a software that simplifies the installation, upgrade, configuration, and removal of software packages.
Package managers take care of dependencies, versioning, and other difficult chores to make managing programs easier.
Package managers examples:
dpkg: Originally used by Debian and now by Ubuntu. Uses the .deb format and was the first to have a widely known dependency resolution tool, APT. The ncurses-based front-end for APT, aptitude, is also a popular package manager for Debian-based systems.
Entropy: Used by and created for Sabayon Linux. It works with binary packages that are bzip2-compressed tar archives (file extension: .tbz2).
Flatpak: A containerized/sandboxed packaging format previously known as xdg-app.
GNU Guix: Used by the GNU System. It is based on the Nix package manager with Guile Scheme APIs and specializes in providing exclusively free software.

4.Linux tools like iptables and firewalld can be utilized to configure and manage firewall rules on Linux systems.
Prioritize Secure Shell (SSH) security: SSH service is used for securing remote access, and there are several measures you can take to strengthen the security of SSH.

5.Virtualization improves hardware resources used in your data center.
For example, instead of running one server on one computer system, you can create a virtual server pool on the same computer system by using and returning servers to the pool as required.
Virtualization is a powerful tool that helps relieve administrative overhead while increasing cost savings, scalability and efficiency.
Despite being created decades ago, virtualization continues to be a catalyst for companies’ IT strategies. 

6.Containerization is a similar but improved concept of a VM. Instead of copying the hardware layer, containerization removes the operating system layer from the self-contained environment.
This allows the application to run independently from the host operating system.

7.Advantages and disadvantages of open source software.
Potential open source issues:
1)The difficulty of use, some open source applications may be tricky to set up and use.
2)Compatibility issues. 
3)Liabilities and warranties. 
4)Hidden costs.
Benefits of open source:
1)Open source enables technology agility, typically offering multiple ways to solve problems.
2)Open source helps keep your IT organization from getting blocked because a particular capability isn't available from a vendor.
3)Instead of waiting for the vendor to deliver that capability, you can create it yourself.

8. On Linux most of the time the default console is the one you can switch by pressing "ALT+F1", and you can use up to six local Virtual Console.

9. In many Unix-like operating systems, including Linux, the system initializes multiple virtual consoles during boot. 
Typically, the first six virtual consoles (accessible via Ctrl + Alt + F1 through Ctrl + Alt + F6) provide text-based terminals for command-line interactions. 
The seventh virtual console (Ctrl + Alt + F7) is commonly designated for the graphical user interface (GUI), such as the X Window System or Wayland compositor. 

This configuration allows users to switch between multiple text-based terminals and the graphical environment seamlessly. 
For instance, you can start a task in the GUI, switch to a text-based terminal to perform command-line operations, and then return to the GUI without closing any applications.

It's important to note that this setup can vary depending on the system's configuration and the display manager in use. Some systems might assign the GUI to a different virtual console or provide more than seven virtual consoles. 
To determine the current virtual console you're using, you can execute the who command in a terminal, which will display information about active sessions and their associated terminals.

10. You can log into a Linux system multiple times under the same username.
Each connection will have its own shell.

Benefits: Run parallel tasks (e.g., coding, compiling, monitoring) without interference.
Isolate environments (separate shell histories, variables, processes).
Recover frozen sessions by switching terminals.
Collaborate or multitask efficiently (SSH, GUI terminals, virtual consoles).
Low resource overhead compared to GUI apps.
Висновок 
During the course of this work, we explored the interface and capabilities of the Linux operating system. Practical skills were gained in working within its environment, including the use of the graphical interface, logging in and out of the system. The structure of the desktop, key actions, and essential settings for effective operation in Linux and its mobile versions were also studied. The experience gained during this work will contribute to further mastering Linux and applying the acquired knowledge in practical tasks.
